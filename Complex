#include <iostream>
#include <string>
#include "locale.h"
#include <list>

using std::cout;
using std::cin;
using std::endl;
using std::string;
using std::list;
class complex {
private:
	double re;
	double im;
public:
	void setRe(double real);
	void setIm(double imag);
	double getRe();
	double getIm();
	void plus(complex& item);
	void min(complex& item);
	void umn(complex& item);
	void del(complex& item);
	double abs();
	complex(double real, double imag) {}
	~complex() { }
};
void complex::setRe(double real) {
	re = real; //задаем значение
}
void complex::setIm(double imag) {
	im = imag; //задаем значение
}
double complex::getRe() {
	return re;
}
double complex::getIm() {
	return im;
}
complex::complex(double real, double imag) {
	setRe(real);
	setIm(imag);
}
void complex::plus(complex& item) {				//+
	setRe((re + item.getRe()));
	setIm((im + item.getIm()));
}
void complex::min(complex& item) {				//-
	setRe((re - item.getRe()));
	setIm((im - item.getIm()));
}
void complex::umn(complex& item) {				//*
	setRe((re*item.getRe()) - im*item.getIm());
	setIm((re*item.getIm() + im*item.getRe()));
}
void complex::del(complex& item) {				// delenie
	double k;
	k = re * re + item.getIm * item.getIm;
	setRe((re*item.getRe() + im*item.getIm()) / k);
	setIm((re*item.getIm() - re*item.getIm()) / k)
}
double complex::abs() {							//модуль
	return sqrt(re*re + im*im);
}
